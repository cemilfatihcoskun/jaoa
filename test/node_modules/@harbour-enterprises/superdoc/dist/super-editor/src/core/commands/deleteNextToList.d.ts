/**
 * Get the context information for the current paragraph.
 * @param {import("prosemirror-state").EditorState} state
 * @returns {Object|null} Context information for the paragraph or null if not found.
 */
export function getParaCtx(state: import("prosemirror-state").EditorState): any | null;
/**
 * Check if the cursor is at the visual end of the paragraph.
 * @param {import("prosemirror-state").EditorState} state
 * @param {Object} ctx
 * @returns {boolean}
 */
export function atVisualParaEnd(state: import("prosemirror-state").EditorState, ctx: any): boolean;
export function handleDeleteNextToList(): Function;
